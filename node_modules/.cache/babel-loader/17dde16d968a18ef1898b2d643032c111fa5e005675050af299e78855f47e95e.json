{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MOUNRAJ A\\\\OneDrive\\\\Documents\\\\ReactWorkspace\\\\accountingsystem\\\\accountingsystem\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalExpense, setTotalExpense] = useState(0);\n  const [userId] = useState(1); // Assuming user ID is fixed at 1 for this example\n  const [isDataUpdated, setIsDataUpdated] = useState(false);\n\n  // Fetch data when update button is clicked\n  const fetchData = () => {\n    const userRequest = axios.get(`http://localhost:8000/users/${userId}`);\n    const transactionsRequest = axios.get('http://localhost:8000/transactions');\n    Promise.all([userRequest, transactionsRequest]).then(responses => {\n      const transactionsResponse = responses[1];\n      console.log('Transactions Response:', transactionsResponse);\n\n      // Calculate total income and expense\n      const income = transactionsResponse.data.filter(t => t.type === 'income').reduce((acc, t) => acc + t.amount, 0);\n      const expense = transactionsResponse.data.filter(t => t.type === 'expense').reduce((acc, t) => acc + t.amount, 0);\n      setTotalIncome(income);\n      setTotalExpense(expense);\n      setIsDataUpdated(true); // Indicate data has been updated\n    }).catch(err => {\n      console.error('Error fetching data:', err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", totalIncome.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", totalExpense.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      children: \"Update Income and Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), isDataUpdated && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Income and Expense data updated successfully.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"SwYvdvRdIsG8pYmE/HZqLyMim1A=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Dashboard","_s","totalIncome","setTotalIncome","totalExpense","setTotalExpense","userId","isDataUpdated","setIsDataUpdated","fetchData","userRequest","get","transactionsRequest","Promise","all","then","responses","transactionsResponse","console","log","income","data","filter","t","type","reduce","acc","amount","expense","catch","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MOUNRAJ A/OneDrive/Documents/ReactWorkspace/accountingsystem/accountingsystem/src/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Dashboard.css';\r\n\r\nfunction Dashboard() {\r\n  const [totalIncome, setTotalIncome] = useState(0);\r\n  const [totalExpense, setTotalExpense] = useState(0);\r\n  const [userId] = useState(1); // Assuming user ID is fixed at 1 for this example\r\n  const [isDataUpdated, setIsDataUpdated] = useState(false);\r\n\r\n  // Fetch data when update button is clicked\r\n  const fetchData = () => {\r\n    const userRequest = axios.get(`http://localhost:8000/users/${userId}`);\r\n    const transactionsRequest = axios.get('http://localhost:8000/transactions');\r\n\r\n    Promise.all([userRequest, transactionsRequest])\r\n      .then((responses) => {\r\n        const transactionsResponse = responses[1];\r\n\r\n        console.log('Transactions Response:', transactionsResponse);\r\n\r\n        // Calculate total income and expense\r\n        const income = transactionsResponse.data\r\n          .filter(t => t.type === 'income')\r\n          .reduce((acc, t) => acc + t.amount, 0);\r\n        const expense = transactionsResponse.data\r\n          .filter(t => t.type === 'expense')\r\n          .reduce((acc, t) => acc + t.amount, 0);\r\n\r\n        setTotalIncome(income);\r\n        setTotalExpense(expense);\r\n        setIsDataUpdated(true); // Indicate data has been updated\r\n      })\r\n      .catch((err) => {\r\n        console.error('Error fetching data:', err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Dashboard</h2>\r\n      <div className=\"dashboard-cards\">\r\n        <div className=\"dashboard-card\">\r\n          <h3>Total Income</h3>\r\n          <p>${totalIncome.toFixed(2)}</p>\r\n        </div>\r\n        <div className=\"dashboard-card\">\r\n          <h3>Total Expense</h3>\r\n          <p>${totalExpense.toFixed(2)}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Update button to fetch data manually */}\r\n      <button onClick={fetchData}>Update Income and Expense</button>\r\n\r\n      {/* Show a message after updating */}\r\n      {isDataUpdated && <p>Income and Expense data updated successfully.</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}