{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaama\\\\OneDrive\\\\Desktop\\\\React kk\\\\accountingsystem\\\\src\\\\DataEntryForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './DataEntryForm.css';\n\n// function DataEntryForm({ onAddTransaction }) {\n//   const [type, setType] = useState('income');\n//   const [amount, setAmount] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [error, setError] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!amount || isNaN(amount)) {\n//       setError('Please enter a valid amount');\n//       return;\n//     }\n\n//     const newTransaction = { type, amount: parseFloat(amount), description };\n\n//     try {\n//       await axios.post('http://localhost:3000/entries', newTransaction);\n//       onAddTransaction(newTransaction); // To update parent component with new transaction\n//       setType('income');\n//       setAmount('');\n//       setDescription('');\n//       setError('');\n//       alert('Transaction added successfully');\n//     } catch (error) {\n//       console.error('Error adding transaction:', error);\n//       setError('Failed to add transaction. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"data-entry-container\">\n//       <center>\n//         <h2>Data Entry</h2>\n//       </center>\n//       <form className=\"data-entry-form\" onSubmit={handleSubmit}>\n//         <label>\n//           Type:\n//           <select value={type} onChange={(e) => setType(e.target.value)}>\n//             <option value=\"income\">Income</option>\n//             <option value=\"expense\">Expense</option>\n//           </select>\n//         </label>\n//         <label>\n//           Amount:\n//           <input\n//             type=\"number\"\n//             value={amount}\n//             onChange={(e) => setAmount(e.target.value)}\n//             required\n//           />\n//         </label>\n//         <label>\n//           Description:\n//           <input\n//             type=\"text\"\n//             value={description}\n//             onChange={(e) => setDescription(e.target.value)}\n//             required\n//           />\n//         </label>\n//         {error && <p className=\"error-message\">{error}</p>}\n//         <button type=\"submit\">Add Transaction</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default DataEntryForm;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './DataEntryForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataEntryForm({\n  onAddTransaction\n}) {\n  _s();\n  const [type, setType] = useState('income');\n  const [amount, setAmount] = useState('');\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!amount || isNaN(amount)) {\n      setError('Please enter a valid amount');\n      return;\n    }\n    const newTransaction = {\n      type,\n      amount: parseFloat(amount),\n      description\n    };\n    try {\n      await axios.post('http://localhost:3000/entries', newTransaction);\n      onAddTransaction(newTransaction); // To update parent component with new transaction\n      setType('income');\n      setAmount('');\n      setDescription('');\n      setError('');\n      alert('Transaction added successfully');\n    } catch (error) {\n      console.error('Error adding transaction:', error);\n      setError('Failed to add transaction. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-entry-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Data Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"data-entry-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: type,\n          onChange: e => setType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"income\",\n            children: \"Income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"expense\",\n            children: \"Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(DataEntryForm, \"t02uJ5amsxPNqj6zYviDev8P2YE=\");\n_c = DataEntryForm;\nexport default DataEntryForm;\nvar _c;\n$RefreshReg$(_c, \"DataEntryForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DataEntryForm","onAddTransaction","_s","type","setType","amount","setAmount","description","setDescription","error","setError","handleSubmit","e","preventDefault","isNaN","newTransaction","parseFloat","post","alert","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/kaama/OneDrive/Desktop/React kk/accountingsystem/src/DataEntryForm.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import './DataEntryForm.css';\r\n\r\n// function DataEntryForm({ onAddTransaction }) {\r\n//   const [type, setType] = useState('income');\r\n//   const [amount, setAmount] = useState('');\r\n//   const [description, setDescription] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!amount || isNaN(amount)) {\r\n//       setError('Please enter a valid amount');\r\n//       return;\r\n//     }\r\n\r\n//     const newTransaction = { type, amount: parseFloat(amount), description };\r\n\r\n//     try {\r\n//       await axios.post('http://localhost:3000/entries', newTransaction);\r\n//       onAddTransaction(newTransaction); // To update parent component with new transaction\r\n//       setType('income');\r\n//       setAmount('');\r\n//       setDescription('');\r\n//       setError('');\r\n//       alert('Transaction added successfully');\r\n//     } catch (error) {\r\n//       console.error('Error adding transaction:', error);\r\n//       setError('Failed to add transaction. Please try again.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"data-entry-container\">\r\n//       <center>\r\n//         <h2>Data Entry</h2>\r\n//       </center>\r\n//       <form className=\"data-entry-form\" onSubmit={handleSubmit}>\r\n//         <label>\r\n//           Type:\r\n//           <select value={type} onChange={(e) => setType(e.target.value)}>\r\n//             <option value=\"income\">Income</option>\r\n//             <option value=\"expense\">Expense</option>\r\n//           </select>\r\n//         </label>\r\n//         <label>\r\n//           Amount:\r\n//           <input\r\n//             type=\"number\"\r\n//             value={amount}\r\n//             onChange={(e) => setAmount(e.target.value)}\r\n//             required\r\n//           />\r\n//         </label>\r\n//         <label>\r\n//           Description:\r\n//           <input\r\n//             type=\"text\"\r\n//             value={description}\r\n//             onChange={(e) => setDescription(e.target.value)}\r\n//             required\r\n//           />\r\n//         </label>\r\n//         {error && <p className=\"error-message\">{error}</p>}\r\n//         <button type=\"submit\">Add Transaction</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default DataEntryForm;\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './DataEntryForm.css';\r\n\r\nfunction DataEntryForm({ onAddTransaction }) {\r\n  const [type, setType] = useState('income');\r\n  const [amount, setAmount] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!amount || isNaN(amount)) {\r\n      setError('Please enter a valid amount');\r\n      return;\r\n    }\r\n\r\n    const newTransaction = { type, amount: parseFloat(amount), description };\r\n\r\n    try {\r\n      await axios.post('http://localhost:3000/entries', newTransaction);\r\n      onAddTransaction(newTransaction); // To update parent component with new transaction\r\n      setType('income');\r\n      setAmount('');\r\n      setDescription('');\r\n      setError('');\r\n      alert('Transaction added successfully');\r\n    } catch (error) {\r\n      console.error('Error adding transaction:', error);\r\n      setError('Failed to add transaction. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-entry-container\">\r\n      <center>\r\n        <h2>Data Entry</h2>\r\n      </center>\r\n      <form className=\"data-entry-form\" onSubmit={handleSubmit}>\r\n        <label>\r\n          Type:\r\n          <select value={type} onChange={(e) => setType(e.target.value)}>\r\n            <option value=\"income\">Income</option>\r\n            <option value=\"expense\">Expense</option>\r\n          </select>\r\n        </label>\r\n        <label>\r\n          Amount:\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Description:\r\n          <input\r\n            type=\"text\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n        <button type=\"submit\">Add Transaction</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataEntryForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}