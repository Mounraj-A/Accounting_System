{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaama\\\\OneDrive\\\\Desktop\\\\React kk\\\\accountingsystem\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalExpense, setTotalExpense] = useState(0);\n\n  // Fetch user data and transactions when the component mounts\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        // Fetch transactions data\n        const transactionsResponse = await axios.get('http://localhost:8000/transactions');\n\n        // Calculate total income and expense directly\n        const income = transactionsResponse.data.filter(t => t.type === 'income').reduce((acc, t) => acc + t.amount, 0);\n        const expense = transactionsResponse.data.filter(t => t.type === 'expense').reduce((acc, t) => acc + t.amount, 0);\n        setTotalIncome(income);\n        setTotalExpense(expense);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n      }\n    };\n    fetchUserData();\n  }, []);\n\n  // Example function to update transaction (PUT request)\n  const updateTransaction = async (transactionId, updatedData) => {\n    try {\n      const response = await axios.put(`http://localhost:8000/transactions/${transactionId}`, updatedData);\n      if (response.status === 200) {\n        console.log('Transaction updated successfully:', response.data);\n        // Optionally, you can refresh the data after updating\n        // fetchUserData();\n      } else {\n        console.error('Failed to update transaction');\n      }\n    } catch (error) {\n      console.error('Error updating transaction:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", totalIncome.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", totalExpense.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"yC9TtIJiHTyGAJyuKxhNRtuv070=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Dashboard","_s","totalIncome","setTotalIncome","totalExpense","setTotalExpense","fetchUserData","transactionsResponse","get","income","data","filter","t","type","reduce","acc","amount","expense","err","console","error","updateTransaction","transactionId","updatedData","response","put","status","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/kaama/OneDrive/Desktop/React kk/accountingsystem/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Dashboard.css';\r\n\r\nfunction Dashboard() {\r\n  const [totalIncome, setTotalIncome] = useState(0);\r\n  const [totalExpense, setTotalExpense] = useState(0);\r\n\r\n  // Fetch user data and transactions when the component mounts\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        // Fetch transactions data\r\n        const transactionsResponse = await axios.get('http://localhost:8000/transactions');\r\n\r\n        // Calculate total income and expense directly\r\n        const income = transactionsResponse.data\r\n          .filter(t => t.type === 'income')\r\n          .reduce((acc, t) => acc + t.amount, 0);\r\n        const expense = transactionsResponse.data\r\n          .filter(t => t.type === 'expense')\r\n          .reduce((acc, t) => acc + t.amount, 0);\r\n\r\n        setTotalIncome(income);\r\n        setTotalExpense(expense);\r\n      } catch (err) {\r\n        console.error('Error fetching data:', err);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  // Example function to update transaction (PUT request)\r\n  const updateTransaction = async (transactionId, updatedData) => {\r\n    try {\r\n      const response = await axios.put(`http://localhost:8000/transactions/${transactionId}`, updatedData);\r\n      if (response.status === 200) {\r\n        console.log('Transaction updated successfully:', response.data);\r\n        // Optionally, you can refresh the data after updating\r\n        // fetchUserData();\r\n      } else {\r\n        console.error('Failed to update transaction');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating transaction:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Dashboard</h2>\r\n      <div className=\"dashboard-cards\">\r\n        <div className=\"dashboard-card\">\r\n          <h3>Total Income</h3>\r\n          <p>${totalIncome.toFixed(2)}</p>\r\n        </div>\r\n        <div className=\"dashboard-card\">\r\n          <h3>Total Expense</h3>\r\n          <p>${totalExpense.toFixed(2)}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}