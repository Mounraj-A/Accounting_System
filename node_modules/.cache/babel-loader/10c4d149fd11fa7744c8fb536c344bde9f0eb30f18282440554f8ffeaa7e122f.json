{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MOUNRAJ A\\\\OneDrive\\\\Documents\\\\ReactWorkspace\\\\accountingsystem\\\\accountingsystem\\\\src\\\\DataEntryForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './DataEntryForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataEntryForm({\n  onAddTransaction\n}) {\n  _s();\n  const [type, setType] = useState('');\n  const [amount, setAmount] = useState('');\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState(''); // State to hold success message\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!type || !amount || !description) {\n      setError('All fields are required');\n      return;\n    }\n    try {\n      // Construct new transaction object\n      const newTransaction = {\n        type,\n        amount: parseFloat(amount),\n        description\n      };\n\n      // Post the new transaction to the server (db.json)\n      const response = await axios.post('http://localhost:8000/transactions', newTransaction);\n      if (response.status === 201) {\n        setError('');\n        setSuccessMessage('Transaction is complete!'); // Display success message\n        onAddTransaction(response.data); // Add new transaction to the transaction history\n\n        // Reset the form fields to allow a fresh data entry\n        setType('');\n        setAmount('');\n        setDescription('');\n\n        // Clear the success message after 3 seconds (optional)\n        setTimeout(() => {\n          setSuccessMessage('');\n        }, 3000);\n      }\n    } catch (err) {\n      setError('Error occurred while adding the transaction');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-entry-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 26\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Type:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: type,\n          onChange: e => setType(e.target.value),\n          placeholder: \"Enter transaction type\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          placeholder: \"Enter amount\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          placeholder: \"Enter description\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(DataEntryForm, \"bF4FO5LnG/2J5URAT31UQr7xxhM=\");\n_c = DataEntryForm;\nexport default DataEntryForm;\nvar _c;\n$RefreshReg$(_c, \"DataEntryForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DataEntryForm","onAddTransaction","_s","type","setType","amount","setAmount","description","setDescription","error","setError","successMessage","setSuccessMessage","handleSubmit","e","preventDefault","newTransaction","parseFloat","response","post","status","data","setTimeout","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/MOUNRAJ A/OneDrive/Documents/ReactWorkspace/accountingsystem/accountingsystem/src/DataEntryForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './DataEntryForm.css';\r\n\r\nfunction DataEntryForm({ onAddTransaction }) {\r\n  const [type, setType] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState(''); // State to hold success message\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!type || !amount || !description) {\r\n      setError('All fields are required');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Construct new transaction object\r\n      const newTransaction = {\r\n        type,\r\n        amount: parseFloat(amount),\r\n        description,\r\n      };\r\n\r\n      // Post the new transaction to the server (db.json)\r\n      const response = await axios.post('http://localhost:8000/transactions', newTransaction);\r\n\r\n      if (response.status === 201) {\r\n        setError('');\r\n        setSuccessMessage('Transaction is complete!'); // Display success message\r\n        onAddTransaction(response.data); // Add new transaction to the transaction history\r\n\r\n        // Reset the form fields to allow a fresh data entry\r\n        setType('');\r\n        setAmount('');\r\n        setDescription('');\r\n\r\n        // Clear the success message after 3 seconds (optional)\r\n        setTimeout(() => {\r\n          setSuccessMessage('');\r\n        }, 3000);\r\n      }\r\n    } catch (err) {\r\n      setError('Error occurred while adding the transaction');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-entry-container\">\r\n      <h2>Add Transaction</h2>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {successMessage && <p className=\"success-message\">{successMessage}</p>} {/* Display success message */}\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Type:\r\n          <input\r\n            type=\"text\"\r\n            value={type}\r\n            onChange={(e) => setType(e.target.value)}\r\n            placeholder=\"Enter transaction type\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Amount:\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            placeholder=\"Enter amount\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Description:\r\n          <input\r\n            type=\"text\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            placeholder=\"Enter description\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add Transaction</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataEntryForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}