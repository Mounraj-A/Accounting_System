{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaama\\\\OneDrive\\\\Desktop\\\\React kk\\\\accountingsystem\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalExpense, setTotalExpense] = useState(0);\n  const [userId] = useState(1); // Assuming user ID is fixed at 1 for this example\n  const [userData, setUserData] = useState({}); // Store user data if needed\n\n  // Fetch user data and transactions when the component mounts\n  useEffect(() => {\n    const fetchData = () => {\n      // Fetch user data and transactions concurrently\n      const userRequest = axios.get(`http://localhost:8000/users/${userId}`);\n      const transactionsRequest = axios.get('http://localhost:8000/transactions');\n      Promise.all([userRequest, transactionsRequest]).then(responses => {\n        const userResponse = responses[0];\n        const transactionsResponse = responses[1];\n\n        // Store user data if needed\n        setUserData(userResponse.data);\n\n        // Calculate total income and expense directly\n        const income = transactionsResponse.data.filter(t => t.type === 'income').reduce((acc, t) => acc + t.amount, 0);\n        const expense = transactionsResponse.data.filter(t => t.type === 'expense').reduce((acc, t) => acc + t.amount, 0);\n        setTotalIncome(income);\n        setTotalExpense(expense);\n      }).catch(err => {\n        console.error('Error fetching data:', err);\n      });\n    };\n    fetchData();\n  }, [userId]);\n\n  // Function to update user data\n  const updateUserData = updatedData => {\n    axios.put(`http://localhost:8000/users/${userId}`, updatedData).then(response => {\n      console.log('User data updated:', response.data);\n      // Optionally, refresh the user data after updating\n      setUserData(response.data);\n    }).catch(error => {\n      console.error('Error updating user data:', error);\n    });\n  };\n\n  // Example: Update user data (you can call this function when needed)\n  const handleUpdateUser = () => {\n    const updatedData = {\n      username: 'NewUsername' // Example updated value\n      // Add other fields as necessary\n    };\n    updateUserData(updatedData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", totalIncome.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", totalExpense.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdateUser,\n      children: \"Update User Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"i3Dlzy7zDRxYT2h8Y2V+hlwUsSA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Dashboard","_s","totalIncome","setTotalIncome","totalExpense","setTotalExpense","userId","userData","setUserData","fetchData","userRequest","get","transactionsRequest","Promise","all","then","responses","userResponse","transactionsResponse","data","income","filter","t","type","reduce","acc","amount","expense","catch","err","console","error","updateUserData","updatedData","put","response","log","handleUpdateUser","username","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kaama/OneDrive/Desktop/React kk/accountingsystem/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Dashboard.css';\r\n\r\nfunction Dashboard() {\r\n  const [totalIncome, setTotalIncome] = useState(0);\r\n  const [totalExpense, setTotalExpense] = useState(0);\r\n  const [userId] = useState(1); // Assuming user ID is fixed at 1 for this example\r\n  const [userData, setUserData] = useState({}); // Store user data if needed\r\n\r\n  // Fetch user data and transactions when the component mounts\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      // Fetch user data and transactions concurrently\r\n      const userRequest = axios.get(`http://localhost:8000/users/${userId}`);\r\n      const transactionsRequest = axios.get('http://localhost:8000/transactions');\r\n\r\n      Promise.all([userRequest, transactionsRequest])\r\n        .then((responses) => {\r\n          const userResponse = responses[0];\r\n          const transactionsResponse = responses[1];\r\n\r\n          // Store user data if needed\r\n          setUserData(userResponse.data);\r\n\r\n          // Calculate total income and expense directly\r\n          const income = transactionsResponse.data\r\n            .filter(t => t.type === 'income')\r\n            .reduce((acc, t) => acc + t.amount, 0);\r\n          const expense = transactionsResponse.data\r\n            .filter(t => t.type === 'expense')\r\n            .reduce((acc, t) => acc + t.amount, 0);\r\n\r\n          setTotalIncome(income);\r\n          setTotalExpense(expense);\r\n        })\r\n        .catch((err) => {\r\n          console.error('Error fetching data:', err);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, [userId]);\r\n\r\n  // Function to update user data\r\n  const updateUserData = (updatedData) => {\r\n    axios.put(`http://localhost:8000/users/${userId}`, updatedData)\r\n      .then((response) => {\r\n        console.log('User data updated:', response.data);\r\n        // Optionally, refresh the user data after updating\r\n        setUserData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating user data:', error);\r\n      });\r\n  };\r\n\r\n  // Example: Update user data (you can call this function when needed)\r\n  const handleUpdateUser = () => {\r\n    const updatedData = {\r\n      username: 'NewUsername', // Example updated value\r\n      // Add other fields as necessary\r\n    };\r\n    updateUserData(updatedData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Dashboard</h2>\r\n      <div className=\"dashboard-cards\">\r\n        <div className=\"dashboard-card\">\r\n          <h3>Total Income</h3>\r\n          <p>${totalIncome.toFixed(2)}</p>\r\n        </div>\r\n        <div className=\"dashboard-card\">\r\n          <h3>Total Expense</h3>\r\n          <p>${totalExpense.toFixed(2)}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Example button to update user data */}\r\n      <button onClick={handleUpdateUser}>Update User Data</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}